// Generated by view binder compiler. Do not edit!
package com.example.emprendimientoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.GridLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.emprendimientoapp.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final GridLayout productGrid;

  @NonNull
  public final ImageButton productImage1;

  @NonNull
  public final ImageButton productImage2;

  @NonNull
  public final ImageButton productImage3;

  @NonNull
  public final ImageButton productImage4;

  @NonNull
  public final EditText searchBar;

  private ActivitySearchBinding(@NonNull LinearLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull GridLayout productGrid,
      @NonNull ImageButton productImage1, @NonNull ImageButton productImage2,
      @NonNull ImageButton productImage3, @NonNull ImageButton productImage4,
      @NonNull EditText searchBar) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.productGrid = productGrid;
    this.productImage1 = productImage1;
    this.productImage2 = productImage2;
    this.productImage3 = productImage3;
    this.productImage4 = productImage4;
    this.searchBar = searchBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.product_grid;
      GridLayout productGrid = ViewBindings.findChildViewById(rootView, id);
      if (productGrid == null) {
        break missingId;
      }

      id = R.id.product_image1;
      ImageButton productImage1 = ViewBindings.findChildViewById(rootView, id);
      if (productImage1 == null) {
        break missingId;
      }

      id = R.id.product_image2;
      ImageButton productImage2 = ViewBindings.findChildViewById(rootView, id);
      if (productImage2 == null) {
        break missingId;
      }

      id = R.id.product_image3;
      ImageButton productImage3 = ViewBindings.findChildViewById(rootView, id);
      if (productImage3 == null) {
        break missingId;
      }

      id = R.id.product_image4;
      ImageButton productImage4 = ViewBindings.findChildViewById(rootView, id);
      if (productImage4 == null) {
        break missingId;
      }

      id = R.id.search_bar;
      EditText searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      return new ActivitySearchBinding((LinearLayout) rootView, bottomNavigation, productGrid,
          productImage1, productImage2, productImage3, productImage4, searchBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
